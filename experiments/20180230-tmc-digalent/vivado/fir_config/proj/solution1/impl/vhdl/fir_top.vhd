-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir_top is
port (
    in_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_V_empty_n : IN STD_LOGIC;
    in_V_read : OUT STD_LOGIC;
    out_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_V_full_n : IN STD_LOGIC;
    out_V_write : OUT STD_LOGIC;
    config_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of fir_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fir_top,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=32,HLS_SYN_TPT=30,HLS_SYN_MEM=0,HLS_SYN_DSP=21,HLS_SYN_FF=289,HLS_SYN_LUT=624}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal dummy_fe_U0_ap_start : STD_LOGIC;
    signal dummy_fe_U0_ap_done : STD_LOGIC;
    signal dummy_fe_U0_ap_continue : STD_LOGIC;
    signal dummy_fe_U0_ap_idle : STD_LOGIC;
    signal dummy_fe_U0_ap_ready : STD_LOGIC;
    signal dummy_fe_U0_in_V_read : STD_LOGIC;
    signal dummy_fe_U0_out_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal dummy_fe_U0_out_V_write : STD_LOGIC;
    signal dummy_fe_U0_config_out_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal dummy_fe_U0_config_out_V_write : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_ap_start : STD_LOGIC := '0';
    signal p_fir_config_cpp_lin_U0_ap_done : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_ap_continue : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_ap_idle : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_ap_ready : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_fir_in_read : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_fir_out_din : STD_LOGIC_VECTOR (23 downto 0);
    signal p_fir_config_cpp_lin_U0_fir_out_write : STD_LOGIC;
    signal p_fir_config_cpp_lin_U0_fir_config_V_read : STD_LOGIC;
    signal dummy_be_U0_ap_start : STD_LOGIC := '0';
    signal dummy_be_U0_ap_done : STD_LOGIC;
    signal dummy_be_U0_ap_continue : STD_LOGIC;
    signal dummy_be_U0_ap_idle : STD_LOGIC;
    signal dummy_be_U0_ap_ready : STD_LOGIC;
    signal dummy_be_U0_in_V_read : STD_LOGIC;
    signal dummy_be_U0_out_V_din : STD_LOGIC_VECTOR (23 downto 0);
    signal dummy_be_U0_out_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal fir_in_channel_full_n : STD_LOGIC;
    signal fir_in_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal fir_in_channel_empty_n : STD_LOGIC;
    signal fir_config_V_full_n : STD_LOGIC;
    signal fir_config_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal fir_config_V_empty_n : STD_LOGIC;
    signal fir_out_channel_full_n : STD_LOGIC;
    signal fir_out_channel_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal fir_out_channel_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;

    component dummy_fe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_V_empty_n : IN STD_LOGIC;
        in_V_read : OUT STD_LOGIC;
        out_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_V_full_n : IN STD_LOGIC;
        out_V_write : OUT STD_LOGIC;
        config_out_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        config_out_V_full_n : IN STD_LOGIC;
        config_out_V_write : OUT STD_LOGIC;
        config_in_V : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component p_fir_config_cpp_lin IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fir_in_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        fir_in_empty_n : IN STD_LOGIC;
        fir_in_read : OUT STD_LOGIC;
        fir_out_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        fir_out_full_n : IN STD_LOGIC;
        fir_out_write : OUT STD_LOGIC;
        fir_config_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        fir_config_V_empty_n : IN STD_LOGIC;
        fir_config_V_read : OUT STD_LOGIC );
    end component;


    component dummy_be IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        in_V_empty_n : IN STD_LOGIC;
        in_V_read : OUT STD_LOGIC;
        out_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        out_V_full_n : IN STD_LOGIC;
        out_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w16_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w24_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    dummy_fe_U0 : component dummy_fe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dummy_fe_U0_ap_start,
        ap_done => dummy_fe_U0_ap_done,
        ap_continue => dummy_fe_U0_ap_continue,
        ap_idle => dummy_fe_U0_ap_idle,
        ap_ready => dummy_fe_U0_ap_ready,
        in_V_dout => in_V_dout,
        in_V_empty_n => in_V_empty_n,
        in_V_read => dummy_fe_U0_in_V_read,
        out_V_din => dummy_fe_U0_out_V_din,
        out_V_full_n => fir_in_channel_full_n,
        out_V_write => dummy_fe_U0_out_V_write,
        config_out_V_din => dummy_fe_U0_config_out_V_din,
        config_out_V_full_n => fir_config_V_full_n,
        config_out_V_write => dummy_fe_U0_config_out_V_write,
        config_in_V => config_V);

    p_fir_config_cpp_lin_U0 : component p_fir_config_cpp_lin
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => p_fir_config_cpp_lin_U0_ap_start,
        ap_done => p_fir_config_cpp_lin_U0_ap_done,
        ap_continue => p_fir_config_cpp_lin_U0_ap_continue,
        ap_idle => p_fir_config_cpp_lin_U0_ap_idle,
        ap_ready => p_fir_config_cpp_lin_U0_ap_ready,
        fir_in_dout => fir_in_channel_dout,
        fir_in_empty_n => fir_in_channel_empty_n,
        fir_in_read => p_fir_config_cpp_lin_U0_fir_in_read,
        fir_out_din => p_fir_config_cpp_lin_U0_fir_out_din,
        fir_out_full_n => fir_out_channel_full_n,
        fir_out_write => p_fir_config_cpp_lin_U0_fir_out_write,
        fir_config_V_dout => fir_config_V_dout,
        fir_config_V_empty_n => fir_config_V_empty_n,
        fir_config_V_read => p_fir_config_cpp_lin_U0_fir_config_V_read);

    dummy_be_U0 : component dummy_be
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dummy_be_U0_ap_start,
        ap_done => dummy_be_U0_ap_done,
        ap_continue => dummy_be_U0_ap_continue,
        ap_idle => dummy_be_U0_ap_idle,
        ap_ready => dummy_be_U0_ap_ready,
        in_V_dout => fir_out_channel_dout,
        in_V_empty_n => fir_out_channel_empty_n,
        in_V_read => dummy_be_U0_in_V_read,
        out_V_din => dummy_be_U0_out_V_din,
        out_V_full_n => out_V_full_n,
        out_V_write => dummy_be_U0_out_V_write);

    fir_in_channel_U : component fifo_w16_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dummy_fe_U0_out_V_din,
        if_full_n => fir_in_channel_full_n,
        if_write => dummy_fe_U0_out_V_write,
        if_dout => fir_in_channel_dout,
        if_empty_n => fir_in_channel_empty_n,
        if_read => p_fir_config_cpp_lin_U0_fir_in_read);

    fir_config_V_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dummy_fe_U0_config_out_V_din,
        if_full_n => fir_config_V_full_n,
        if_write => dummy_fe_U0_config_out_V_write,
        if_dout => fir_config_V_dout,
        if_empty_n => fir_config_V_empty_n,
        if_read => p_fir_config_cpp_lin_U0_fir_config_V_read);

    fir_out_channel_U : component fifo_w24_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => p_fir_config_cpp_lin_U0_fir_out_din,
        if_full_n => fir_out_channel_full_n,
        if_write => p_fir_config_cpp_lin_U0_fir_out_write,
        if_dout => fir_out_channel_dout,
        if_empty_n => fir_out_channel_empty_n,
        if_read => dummy_be_U0_in_V_read);





    dummy_be_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                dummy_be_U0_ap_start <= ap_const_logic_0;
            else
                dummy_be_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    p_fir_config_cpp_lin_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_fir_config_cpp_lin_U0_ap_start <= ap_const_logic_0;
            else
                p_fir_config_cpp_lin_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;

    ap_done <= dummy_be_U0_ap_done;
    ap_idle <= (p_fir_config_cpp_lin_U0_ap_idle and dummy_fe_U0_ap_idle and dummy_be_U0_ap_idle);
    ap_ready <= dummy_fe_U0_ap_ready;
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= dummy_be_U0_ap_done;
    ap_sync_ready <= dummy_fe_U0_ap_ready;
    dummy_be_U0_ap_continue <= ap_const_logic_1;
    dummy_fe_U0_ap_continue <= ap_const_logic_1;
    dummy_fe_U0_ap_start <= ap_start;
    in_V_read <= dummy_fe_U0_in_V_read;
    out_V_din <= dummy_be_U0_out_V_din;
    out_V_write <= dummy_be_U0_out_V_write;
    p_fir_config_cpp_lin_U0_ap_continue <= ap_const_logic_1;
end behav;
